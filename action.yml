name: 'EarlyAI Test Generator'
description: 'Generate tests using EarlyAI CLI for modified TypeScript files in a pull request'

inputs:
  branch:
    description: 'Branch to commit generated files to'
    required: false
    default: '${{ github.head_ref }}'
  early-secret-token:
    description: 'EarlyAI access token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Mark git directory as safe
      shell: bash
      run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

    - name: Generate test runner config
      id: generate-json
      shell: bash
      run: |
        # Check if we're in a pull request context
        if [ -z "${{ github.event.pull_request.number }}" ]; then
          echo "Error: No pull request context found"
          exit 1
        fi
        
        # Get the repository information
        REPO_OWNER="${{ github.repository_owner }}"
        REPO_NAME="${{ github.event.repository.name }}"
        PR_NUMBER="${{ github.event.pull_request.number }}"
        
        # Create the git repo URL
        GIT_REPO="https://github.com/${REPO_OWNER}/${REPO_NAME}.git"
        
        echo "Fetching files from PR #${PR_NUMBER}..."
        
        # Create a temporary file to store the JSON output
        TEMP_FILE=$(mktemp)
        
        # Use GitHub CLI to get PR files and process them with jq
        # The GITHUB_TOKEN is automatically available in GitHub Actions
        gh api repos/${REPO_OWNER}/${REPO_NAME}/pulls/${PR_NUMBER}/files --paginate | \
        jq -r --arg git_repo "$GIT_REPO" '
          [.[] | 
           select(.status == "added" or .status == "modified") | 
           select(.filename | endswith(".ts")) | 
           select(.filename | (contains("__tests__/") | not) and (endswith(".spec.ts") | not) and (endswith(".test.ts") | not)) | 
           {file: .filename, names: ["*"]}
          ] | {git_repo: $git_repo, paths: .}' > "${TEMP_FILE}"
        
        # Set the output using the proper GitHub Actions syntax
        echo "result<<EOF" >> $GITHUB_OUTPUT
        cat "${TEMP_FILE}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "Generated test runner config:"
        cat "${TEMP_FILE}"
        
        # Clean up
        rm -f "${TEMP_FILE}"
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Create tests_runner_config.json
      id: write-config
      shell: bash
      run: |
        printf '%s' '${{ steps.generate-json.outputs.result }}' > tests_runner_config.json

    - name: Run EarlyAI CLI
      shell: bash
      run: /entrypoint.sh
      env:
        EARLY_ACCESS_TOKEN: ${{ inputs.early-secret-token }}
        EARLY_ACTION: generate_tests

    - name: Auto-commit generated files
      shell: bash
      run: |
        # Check if there are any generated test files
        if [ -n "$(find . -name '*.early.test.ts' -type f)" ]; then
          echo "Found generated test files, committing..."
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add "**/*.early.test.ts"
          git commit -m "chore: auto-generated tests" || exit 0
          git push origin ${{ inputs.branch }} || exit 0
          echo "Successfully committed generated test files"
        else
          echo "No generated test files found to commit"
        fi 